# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: image_classification_service.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"image_classification_service.proto\"!\n\x0bImageUpload\x12\x12\n\nimage_data\x18\x01 \x01(\x0c\"#\n\x14\x43lassificationResult\x12\x0b\n\x03\x63ls\x18\x01 \x01(\x05\x32_\n\x13ImageClassification\x12H\n!ImageClassificationRequestHandler\x12\x0c.ImageUpload\x1a\x15.ClassificationResultb\x06proto3')



_IMAGEUPLOAD = DESCRIPTOR.message_types_by_name['ImageUpload']
_CLASSIFICATIONRESULT = DESCRIPTOR.message_types_by_name['ClassificationResult']
ImageUpload = _reflection.GeneratedProtocolMessageType('ImageUpload', (_message.Message,), {
  'DESCRIPTOR' : _IMAGEUPLOAD,
  '__module__' : 'image_classification_service_pb2'
  # @@protoc_insertion_point(class_scope:ImageUpload)
  })
_sym_db.RegisterMessage(ImageUpload)

ClassificationResult = _reflection.GeneratedProtocolMessageType('ClassificationResult', (_message.Message,), {
  'DESCRIPTOR' : _CLASSIFICATIONRESULT,
  '__module__' : 'image_classification_service_pb2'
  # @@protoc_insertion_point(class_scope:ClassificationResult)
  })
_sym_db.RegisterMessage(ClassificationResult)

_IMAGECLASSIFICATION = DESCRIPTOR.services_by_name['ImageClassification']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _IMAGEUPLOAD._serialized_start=38
  _IMAGEUPLOAD._serialized_end=71
  _CLASSIFICATIONRESULT._serialized_start=73
  _CLASSIFICATIONRESULT._serialized_end=108
  _IMAGECLASSIFICATION._serialized_start=110
  _IMAGECLASSIFICATION._serialized_end=205
# @@protoc_insertion_point(module_scope)
