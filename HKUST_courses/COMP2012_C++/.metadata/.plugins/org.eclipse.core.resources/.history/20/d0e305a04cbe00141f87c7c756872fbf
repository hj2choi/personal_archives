/*
 * stringset.cpp
 *
 *  Created on: Feb 24, 2015
 *      Author: HongJoon
 */
#include "stringset.h"

using namespace std;

StringSet::StringSet()
{
	size=0;
	capacity=0;
	arr=NULL;
}

StringSet::~StringSet()
{
	delete []arr;
	arr=NULL;
}

StringSet::StringSet(const std::string& oneItem)
{
	size=1;
	capacity=2;
	arr = new std::string[capacity];
	arr[0] = oneItem;

}

StringSet::StringSet(const string inputStrArr[], int sz)
{
	size = sz;
	capacity = size*2;			//double the capacity
	arr = new string[capacity];
	for (int i=0; i<size; i++)
		arr[i] = inputStrArr[i];

}

StringSet::StringSet(const StringSet& otherSet)
{
	size = otherSet.size;
	capacity = otherSet.capacity;
	arr = new string[capacity];
	for (int i=0; i< size; i++)
		arr[i] = otherSet.arr[i];

}

string StringSet::getItem(int index) const
{
	return arr[index];
}

int StringSet::getSize(void) const
{
	return size;
}

int StringSet::getCapacity(void) const
{
	return capacity;
}
